package RentalAnalysis;

import java.util.*;

/**
 * This class implements web page ranking using merge sort.
 */
public class Sorting {
    /**
     * Sorts web pages based on their occurrence using merge sort.
     *
     * @param cozycoderT      The hashtable to be sorted
     * @param cozycoderOccur  The occurrence flag
     */
    public static void sortWebPagesByOccurrence(Hashtable<?, Integer> cozycoderT, int cozycoderOccur) {
        // Organize the list of hashtable entries by sorting it.
        ArrayList<Map.Entry<?, Integer>> cozycoderEntryList = new ArrayList<>(cozycoderT.entrySet());
        Collections.sort(cozycoderEntryList, new Comparator<Map.Entry<?, Integer>>() {
            public int compare(Map.Entry<?, Integer> cozycoderO1, Map.Entry<?, Integer> cozycoderO2) {
                return cozycoderO1.getValue().compareTo(cozycoderO2.getValue());
            }
        });
        // Reverse the sorted list to get it in descending order of occurrence
        Collections.reverse(cozycoderEntryList);
        // Display the sorted web page rankings if the 'occur' flag is not zero
        if (cozycoderOccur != 0) {
            System.out.println("\n------------------------------Web Page Ranking------------------------------\n");
            int cozycoderK = 5; // number of top results to be shown
            int cozycoderL = 0;
            System.out.printf("%-10s %s\n", "Sr. No.", "Name and Occurrence");
            System.out.println("-------------------------------------------------");
            while (cozycoderL < cozycoderEntryList.size() && cozycoderK > 0) {
                System.out.printf("\n%-10d| %s\n", cozycoderL + 1, cozycoderEntryList.get(cozycoderL));
                cozycoderL++;
                cozycoderK--;
            }
            System.out.println("\n------------------------------------------------------------\n");
        }
    }
}
